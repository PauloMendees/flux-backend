// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

model UserProfile {
  id           String        @id @unique @default(uuid())
  first_name   String
  last_name    String
  email        String        @unique
  userWallets  UserWallet[]
  categories   Category[]
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  Wallet       Wallet[]

  @@map("user_profile")
}

model UserWallet {
  id            String      @id @unique @default(uuid())
  deleted       Boolean     @default(false)
  user          UserProfile @relation(fields: [userProfileId], references: [id])
  wallet        Wallet      @relation(fields: [walletId], references: [id])
  userProfileId String
  walletId      String
  createdAt     DateTime    @default(now())

  @@map("user_wallet")
}

model Wallet {
  id           String        @id @unique @default(uuid())
  name         String
  description  String?
  ownerId      String
  deleted      Boolean       @default(false)
  owner        UserProfile   @relation(fields: [ownerId], references: [id])
  userWallets  UserWallet[]
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())

  @@map("wallet")
}

model Transaction {
  id            String           @id @unique @default(uuid())
  title         String
  description   String?
  value         Float
  type          TRANSACTION_TYPE
  date          DateTime         @default(now())
  categoryId    String?
  userProfileId String
  walletId      String?
  wallet        Wallet?          @relation(fields: [walletId], references: [id])
  user          UserProfile      @relation(fields: [userProfileId], references: [id])
  category      Category?        @relation(fields: [categoryId], references: [id])
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @default(now())

  @@map("transaction")
}

model Category {
  id            String        @id @unique @default(uuid())
  name          String
  description   String?
  customColor   String?
  userProfileId String
  user          UserProfile   @relation(fields: [userProfileId], references: [id])
  transaction   Transaction[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())

  @@map("category")
}

enum TRANSACTION_TYPE {
  INCOMING
  DEBIT
}

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
